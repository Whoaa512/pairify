// Generated by CoffeeScript 1.4.0
(function() {
  var Ff, a, b, c, col, d, e, f, g, h, i, isPaired, j, k, l, labelObj, m, n, newPair, o, outputPairs, p, pairingMatrix, row, tt, _i, _j, _len, _len1, _ref;

  tt = true;

  Ff = false;

  a = "Megan Tulac";

  b = "Nathan Houle";

  c = "Timothy Schiller";

  d = "Adnan Wahab";

  e = "JP Whitaker";

  f = "Carey Winslow";

  g = "Mark Chatkhan";

  h = "Christen Thompson";

  i = "Sherah Smith";

  j = "Mark Rossetti";

  k = "Henry Zhu";

  l = "Albert Lee";

  m = "Paul Bacchus";

  n = "Mark Reveley";

  o = "Chris Bobek";

  p = "June Jeong";

  isPaired = {
    a: false,
    b: false,
    c: false,
    d: false,
    e: false,
    f: false,
    g: false,
    h: false,
    i: false,
    j: false,
    k: false,
    l: false,
    m: false,
    n: false,
    o: false,
    p: false
  };

  pairingMatrix = [[tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, Ff], [tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt, tt]];

  labelObj = {
    0: a,
    1: b,
    2: c,
    3: d,
    4: e,
    5: f,
    6: g,
    7: h,
    8: i,
    9: j,
    10: k,
    11: l,
    12: m,
    13: n,
    14: o,
    15: p
  };

  outputPairs = [];

  for (i = _i = 0, _len = pairingMatrix.length; _i < _len; i = ++_i) {
    row = pairingMatrix[i];
    _ref = pairingMatrix[i];
    for (j = _j = 0, _len1 = _ref.length; _j < _len1; j = ++_j) {
      col = _ref[j];
      if (!col && (!isPaired[labelObj[i]] && !isPaired[labelObj[j]])) {
        col = true;
        newPair = "" + labelObj[i] + " + " + labelObj[j];
        isPaired[labelObj[i]] = true;
        isPaired[labelObj[j]] = true;
        outputPairs.push(newPair);
        break;
      }
    }
  }

  console.log(outputPairs);

}).call(this);
